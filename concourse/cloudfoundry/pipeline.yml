# Pipeline to initilize new environments

jobs:

- name: terraform-plan
  plan:
  - in_parallel:
    - get: environment-config
      trigger: true
    - get: cg-provision-repo
      trigger: true
  # - put: terraform
  #   tags: [iaas]
  #   params:
  #     terraform_source: cg-provision/terraform/cloudfoundry
  #     env_name: cloudfoundry
  #     plan_only: true
  #     vars: 
  #       environment: ((environment))
  #     vars_files:
  #       environment-config/envs/((environment))/cf.yml

  - task: terraform-plan
    tags: [iaas]
    file: cg-provision-repo/concourse/tasks/terraform.yml
    input_mapping: {terraform-templates: cg-provision-repo}
    params: 
      TERRAFORM_ACTION: plan
      COMPONENT: cloudfoundry
      TEMPLATE_SUBDIR: terraform/cloudfoundry
      S3_TFSTATE_BUCKET: ((buckets.terraform_state))
      AWS_ACCESS_KEY_ID: ((aws.access_key_id))
      AWS_SECRET_ACCESS_KEY: ((aws.secret_access_key))
      AWS_DEFAULT_REGION: ((aws.region))
      TF_VAR_domain: ((cloudfoundry.domain))
      TF_VAR_remote_state_bucket: ((environment))-hub-terraform-state
      TF_VAR_remote_state_region: ((aws.region))
      TF_VAR_remote_stack_name: ((environment))-hub
    vars: 
      access_key_id: ((hack.access_key_id))
      region: ((hack.region))
      secret_access_key: ((hack.secret_access_key))

resources:

- name: cg-provision-repo
  type: git
  source:
    branch: f140
    commit_verification_keys: ((commit_verification_keys))
    paths: ["terraform/cloudfoundry/*", "concourse/tasks/*"]
    uri: https://github.com/cloud-gov/cg-provision.git

- name: environment-config
  type: git
  source:
    branch: f140
    commit_verification_keys: ((commit_verification_keys))
    paths: ["envs/((environment))/cloudfoundry.yml"]
    private_key: ((cg_ci_bot_ssh_pk))
    # Temporarily using this repo for testing
    uri: git@github.com:cloud-gov/westa-env.git

# - name: terraform
#   type: terraform
#   source:
#     env_name: cloudfoundry
#     backend_type: s3
#     backend_config:
#       access_key: ((aws.access_key_id))
#       bucket: ((buckets.terraform_state))
#       # key: ((environment))
#       region: ((aws.region))
#       secret_key: ((aws.secret_access_key))


# - name: general-task
#   type: registry-image
#   source:
#     aws_access_key_id: ((hack.access_key_id))
#     aws_secret_access_key: ((hack.secret_access_key))
#     repository: general-task
#     aws_region: ((aws.region))
#     tag: latest

resource_types:

- name: registry-image
  type: registry-image
  source:
    aws_access_key_id: ((hack.access_key_id))
    aws_secret_access_key: ((hack.secret_access_key))
    repository: registry-image-resource
    aws_region: ((aws.region))
    tag: latest

# - name: s3-iam
#   type: docker-image
#   source:
#     repository: 18fgsa/s3-resource

- name: git
  type: registry-image
  source:
    aws_access_key_id: ((hack.access_key_id))
    aws_secret_access_key: ((hack.secret_access_key))
    repository: git-resource
    aws_region: ((aws.region))
    tag: latest

# - name: terraform
#   type: registry-image
#   source:
#     aws_access_key_id: ((hack.access_key_id))
#     aws_secret_access_key: ((hack.secret_access_key))
#     repository: ljfranklin/terraform-resource
#     aws_region: ((aws.region))
#     tag: latest


  